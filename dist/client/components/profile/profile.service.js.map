{"version":3,"sources":["components/profile/profile.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA2C;AAC3C,sCAAwE;AACxE,8BAAqC;AACrC,iCAA+B;AAC/B,mCAAiC;AASjC;IACI,wBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;IAElC,oCAAW,GAAX,UAAY,OAAc;QACtB,0CAA0C;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,EAAE,CAAA,CAAC,OAAO,CAAC,CACP,CAAC;YACG,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,EAAC,KAAK,EAAC,OAAO,EAAC,CAAC,CAAC,CAAA;YAC5D,IAAI,CAAC,UAAU,GAAC,OAAO,CAAC;QAC5B,CAAC;QACD,IAAI,CAAA,CAAC;YACD,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;QACnE,CAAC;QAEL,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC,EAAE,eAAe,EAAE,MAAM,GAAE,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;QACvE,IAAI,OAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,qBAAqB;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gCAAgC,EAAC,OAAO,CAAC;aAC3D,GAAG,CAAC,UAAC,GAAY,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,CAAA,CAAA,CAAC,CAAC;aACxD,KAAK,CAAC,UAAC,KAAS,IAAG,OAAA,eAAU,CAAC,KAAK,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAA;IACjD,CAAC;IAvBQ,cAAc;QAF1B,iBAAU,EACV;yCAE6B,WAAI;OADrB,cAAc,CAwB1B;IAAD,qBAAC;CAxBD,AAwBC,IAAA;AAxBY,wCAAc","file":"profile.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n \r\nimport { LoginService } from '../login/login.service';\r\nimport { Profile } from '../../../models/profile';\r\nimport {Location } from '@angular/common';\r\n\r\n\r\n@Injectable( \r\n)\r\nexport class ProfileService {\r\n    constructor(private http: Http) {}\r\n     localtoken:string;\r\n    getprofiles(tokenId:string): Observable<Profile[]> {\r\n        // add authorization header with jwt token\r\n        console.log('Hi');\r\n        console.log(tokenId);\r\n        if(tokenId)\r\n            {\r\n                localStorage.setItem('user',JSON.stringify({token:tokenId}))\r\n                this.localtoken=tokenId;\r\n            }\r\n            else{\r\n                this.localtoken=JSON.parse(localStorage.getItem('user')).token;\r\n            }\r\n            \r\n        let headers = new Headers({ 'authorization': 'JWT ' +this.localtoken});\r\n        let options = new RequestOptions({ headers: headers });\r\n \r\n        // get users from api\r\n      return this.http.get('http://localhost:5000/profiles',options)\r\n        .map((res:Response)=>{console.log(res);res || res.json()})\r\n         .catch((error:any)=>Observable.throw(error))\r\n    }\r\n}"]}