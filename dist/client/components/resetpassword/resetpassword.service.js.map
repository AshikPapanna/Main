{"version":3,"sources":["components/resetpassword/resetpassword.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,wCAAgD;AAChD,4CAAuC;AAEvC,wCAA4C;AAC5C,gCAAkC;AAElC,iCAA8B;AAE9B,gEAAmD;AAGnD,IAAa,oBAAoB,GAAjC;IACI,YAAoB,IAAU,EAAoB,QAAa,EAAS,QAAiB;QAArE,SAAI,GAAJ,IAAI,CAAM;QAA0C,aAAQ,GAAR,QAAQ,CAAS;IACzF,CAAC;IACD,gBAAgB,CAAC,KAAY;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,GAAC,IAAI,GAAC,QAAQ,CAAC,QAAQ,GAAC,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAC,QAAQ,CAAC,IAAI,GAAE,EAAE,CAAC,GAAC,iBAAiB,GAAC,KAAK,CAAC,CAAC,GAAG,CAC9H,GAAG;QAEH,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,CAAC,eAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACX,CAAC;IACD,iBAAiB,CAAC,IAAQ,EAAC,KAAY;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAC,IAAI,GAAC,QAAQ,CAAC,QAAQ,GAAC,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAC,QAAQ,CAAC,IAAI,GAAE,EAAE,CAAC,GAAC,iBAAiB,GAAC,KAAK,EAAC,IAAI,CAAC,CAAI,GAAG,CAAC,CAAC,GAAY;YACnI,IAAI,KAAK,GAAE,GAAG,CAAC,IAAI,EAAE,IAAE,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAA;YACvC,IAAI,GAAG,GAAC,GAAG,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAA;YACrC,EAAE,CAAA,CAAC,KAAK,CAAC,CACP,CAAC;gBAEC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,EAAC,IAAI,EAAC,GAAG,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,CAAC,CAAA;gBACrE,MAAM,CAAC,GAAG,CAAC;YACX,CAAC;YACH,IAAI,CAAA,CAAC;gBACH,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;QACH,CAAC,CAAC;aACzB,KAAK,CAAC,CAAC,KAAS,KAAG,eAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAE,cAAc,CAAC,CAAC,CAAC;IAC5E,CAAC;CAKJ,CAAA;AAhCY,oBAAoB;IAFhC,iBAAU,EAAE;IAGwB,WAAA,aAAM,CAAC,2BAAQ,CAAC,CAAA;qCAAvB,WAAI,UAAmD,iBAAQ;GADhF,oBAAoB,CAgChC;AAhCY,oDAAoB","file":"resetpassword.service.js","sourcesContent":["import {Injectable, Inject} from '@angular/core'\r\nimport{Location} from '@angular/common'\r\n\r\nimport {Http, Response} from '@angular/http'\r\nimport {Observable} from 'rxjs/Rx'\r\n\r\nimport 'rxjs/add/operator/map'\r\n\r\nimport {DOCUMENT} from '@angular/platform-browser';\r\n@Injectable()\r\n\r\nexport class ResetpasswordService {\r\n    constructor(private http: Http, @Inject(DOCUMENT) document: any,private location:Location) {\r\n    }\r\n    getresetpassword(token:string): Observable<any> {      \r\n        return this.http.get(location.protocol+'//'+location.hostname+(location.port ? ':'+location.port: '')+'/resetpassword/'+token).map(\r\n            res => {\r\n              \r\n            }).catch(err=> {\r\n                console.log(err);\r\n                return Observable.throw(err);\r\n            });\r\n    }\r\n    postresetpassword(body:any,token:string):Observable<any>{\r\n          return this.http.post(location.protocol+'//'+location.hostname+(location.port ? ':'+location.port: '')+'/resetpassword/'+token,body)   .map((res:Response)=>\r\n                               {let token =res.json()&&res.json().token\r\n                                let usr=res.json() && res.json().user\r\n                                if(token)\r\n                                  {                              \r\n                                    \r\n                                    localStorage.setItem('user',JSON.stringify({user:usr,token:token}))\r\n                                  return res;\r\n                                  }\r\n                                else{\r\n                                  return res;\r\n                                }\r\n                              })\r\n      .catch((error:any)=>Observable.throw(error.json().error||'server error'));\r\n    }\r\n       \r\n\r\n\r\n\r\n}"]}