{"version":3,"sources":["components/instructors/instructor.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,wCAAgD;AAChD,wCAA2C;AAE3C,gCAAkC;AAGlC,4CAAwC;AAExC,iCAA+B;AAE9B,mCAAiC;AACjC,gEAAmD;AAGpD,IAAa,iBAAiB,GAA9B;IACA,YAAoB,IAAS,EAAmB,QAAY,EAAS,QAAkB;QAAnE,SAAI,GAAJ,IAAI,CAAK;QAAwC,aAAQ,GAAR,QAAQ,CAAU;IAAE,CAAC;IAAA,CAAC;IACzF,cAAc;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAC,iBAAiB,CAAC;aAC7D,GAAG,CAAC,CAAC,GAAY,KAAG,GAAG,CAAC,IAAI,EAAE,CAAC;aAC/B,KAAK,CAAC,CAAC,GAAO,KAAG,eAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IACC,oBAAoB,CAAC,EAAS;QAC5B,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,GAAC,IAAI,GAAC,QAAQ,CAAC,QAAQ,GAAC,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAC,QAAQ,CAAC,IAAI,GAAE,EAAE,CAAC,GAAC,kBAAkB,GAAC,EAAE,CAAG;aAC7H,GAAG,CAAC,CAAC,GAAY,OAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAA,CAAC,CAAC;aAC3D,KAAK,CAAC,CAAC,GAAO,OAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,eAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;IACjE,CAAC;CACJ,CAAA;AAbY,iBAAiB;IAD7B,iBAAU,EAAE;IAEkB,WAAA,aAAM,CAAC,2BAAQ,CAAC,CAAA;qCAAtB,WAAI,UAAkD,iBAAQ;GAD1E,iBAAiB,CAa7B;AAbY,8CAAiB","file":"instructor.service.js","sourcesContent":["import {Injectable,Inject} from '@angular/core';\r\nimport{Http,Response} from '@angular/http';\r\n\r\nimport{Observable} from 'rxjs/Rx';\r\n\r\nimport {Instructor,InstructorDetails} from  '../../../models/instructor';\r\nimport {Location}from  '@angular/common'\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\n import 'rxjs/add/operator/catch';\r\n import {DOCUMENT} from '@angular/platform-browser';\r\n\r\n@Injectable()\r\nexport class InstructorService{\r\nconstructor(private http:Http,@Inject(DOCUMENT) document:any,private location :Location){};\r\n  getinstructors():Observable<Instructor[]>{    \r\n     return this.http.get(document.location.href+\"/getinstructors\")\r\n     .map((res:Response)=>res.json())\r\n     .catch((err:any)=>Observable.throw(err));\r\n  }\r\n    getinstructordetails(id:string):Observable<InstructorDetails>{\r\n      console.log(id);\r\n return this.http.get(location.protocol+'//'+location.hostname+(location.port ? ':'+location.port: '')+'/getinstructors/'+id  )\r\n .map((res:Response)=>{ console.log(res);return res.json();})\r\n .catch((err:any)=>{console.log(err); return Observable.throw(err)});\r\n    }\r\n}"]}