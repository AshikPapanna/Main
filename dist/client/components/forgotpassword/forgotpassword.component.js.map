{"version":3,"sources":["components/forgotpassword/forgotpassword.component.ts"],"names":[],"mappings":"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","file":"forgotpassword.component.js","sourcesContent":["import {Component,OnInit} from '@angular/core'\r\nimport {ActivatedRoute,Params} from '@angular/router'\r\nimport 'rxjs/add/operator/switchMap'\r\nimport {ForgotpasswordService} from './forgotpassword.service';\r\nimport {Register} from '../../../models/registration'\r\n\r\n@Component({\r\n    selector:'sa-forgotpassword',\r\n    moduleId:module.id,\r\n    templateUrl:'./forgotpassword.component.html',\r\n    styleUrls:['./forgotpassword.component.css'],\r\n    providers:[ForgotpasswordService]\r\n})\r\nexport class ForgotpasswordComponent {\r\n  \r\n    emailmodel: string;\r\n\r\n    register=new Register('','','','','','','','');\r\nconstructor(private forgotpasswordService:ForgotpasswordService ,private route:ActivatedRoute){}\r\n  confirmpasswordclass:string='';\r\n    passwordclass:string='';\r\n       IsSuccess:boolean=false;\r\n       emailvalidateclass:string='';\r\n        a:string;\r\n       \r\nngOnInit()\r\n{\r\n   \r\n    this.route.queryParams.subscribe((par:Params)=>{this.register.email= par['emailid']})\r\n\r\n}\r\n  validateemail(email:string):boolean{\r\n            if(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n                this.emailvalidateclass='valid'\r\n                return true;\r\n            }\r\n        else{\r\n            this.emailvalidateclass='invalid'\r\n            return false;\r\n        }}\r\ncomparePassword(password:string,confirmpassword:string):boolean{\r\n    if(password!==confirmpassword)\r\n        {          \r\nthis.confirmpasswordclass='invalid';\r\nreturn false;\r\n        }\r\nelse{     \r\n   this.confirmpasswordclass='valid';\r\n   return true;\r\n}\r\n}\r\nValidatepasswordlength(password:string):boolean\r\n {\r\n      if( password.length<8||password.length>20)\r\n                {\r\n                 \r\n                    this.passwordclass='invalid';\r\n                    return false;\r\n                }\r\n                else{\r\n                   \r\n                    this.passwordclass='valid';\r\n                    return true;\r\n                }\r\n }\r\n             onSubmit(){\r\n            \r\nif(!(\r\n this.Validatepasswordlength(this.register.password)\r\n&& this.comparePassword(this.register.password,this.register.confirmpassword)\r\n) )\r\n{\r\n    return false;    \r\n}\r\n         this.forgotpasswordService.forgotpassword(this.register).subscribe(\r\n            user=>\r\n            {\r\n              this.IsSuccess=true;\r\n             },\r\n            err=>{\r\n             console.log(err);\r\n             if(err._body&& JSON.parse(err._body).email&& JSON.parse(err._body).email ){   \r\n                this.emailvalidateclass='invalid';            \r\n                this.IsSuccess=false;            \r\n             }\r\n                \r\n               \r\n            }   \r\n         )\r\n   };\r\n       \r\n}"]}