{"version":3,"sources":["components/forgotpassword/forgotpassword.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,wCAA8C;AAC9C,4CAAsC;AACtC,uCAAoC;AACpC,qEAA+D;AAE/D,0CAA+E;AAS/E,IAAa,uBAAuB,GAApC;IAIA,YAAoB,qBAA2C,EAAU,EAAc,EAAS,MAAa;QAAzF,0BAAqB,GAArB,qBAAqB,CAAsB;QAAU,OAAE,GAAF,EAAE,CAAY;QAAS,WAAM,GAAN,MAAM,CAAO;QACzG,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CACrB;YACI,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,kBAAU,CAAC,QAAQ,EAAC,kBAAU,CAAC,KAAK,CAAC,CAAC;SACpD,CACJ,CAAA;IACH,CAAC;IACC,YAAY,CAAC,KAAY;QACrB,MAAM,CAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,IAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;IAC5E,CAAC;IAIJ,QAAQ;QAGA,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CACnE,IAAI;YAEH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAC/C,CAAC,EACF,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,EAAE,CAAA,CAAC,GAAG,CAAC,KAAK,IAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,IAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAM,CAAC,CAAA,CAAC;gBACtE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAC,SAAS,EAAC,IAAI,EAAC,CAAC,CAAC;YAC/D,CAAC;QAGF,CAAC,CACH,CAAA;IACP,CAAC;IAAA,CAAC;CAEJ,CAAA;AAvCY,uBAAuB;IANnC,gBAAS,CAAC;QACP,QAAQ,EAAC,MAAM,CAAC,EAAE;QAClB,WAAW,EAAC,iCAAiC;QAC7C,SAAS,EAAC,CAAC,gCAAgC,CAAC;QAC5C,SAAS,EAAC,CAAC,8CAAqB,CAAC;KACpC,CAAC;qCAKwC,8CAAqB,EAAa,mBAAW,EAAgB,eAAM;GAJhG,uBAAuB,CAuCnC;AAvCY,0DAAuB","file":"forgotpassword.component.js","sourcesContent":["import {Component,OnInit} from '@angular/core'\r\nimport {Router} from '@angular/router'\r\nimport 'rxjs/add/operator/switchMap'\r\nimport {ForgotpasswordService} from './forgotpassword.service';\r\n\r\nimport {FormBuilder,FormGroup,Validators,AbstractControl} from '@angular/forms'\r\n\r\n\r\n@Component({  \r\n    moduleId:module.id,\r\n    templateUrl:'./forgotpassword.component.html',\r\n    styleUrls:['./forgotpassword.component.css'],\r\n    providers:[ForgotpasswordService]\r\n})\r\nexport class ForgotpasswordComponent {\r\n   fpform:FormGroup;\r\n    emailmodel: string;\r\n\r\nconstructor(private forgotpasswordService:ForgotpasswordService ,private fb:FormBuilder,private router:Router){\r\n    this.createform();\r\n}\r\ncreateform(){\r\n  this.fpform=this.fb.group(\r\n      {\r\n          email:['',[Validators.required,Validators.email]]\r\n      }\r\n  )\r\n}\r\n  isvalidfield(field:string){  \r\n      return  this.fpform.get(field).invalid &&  this.fpform.get(field).touched;\r\n    }\r\n \r\n\r\n\r\n onSubmit(){\r\n            \r\n\r\n         this.forgotpasswordService.forgotpassword(this.fpform.value).subscribe(\r\n            user=>\r\n            {\r\n             this.router.navigate(['/registersuccessfull']);\r\n             },\r\n            err=>{\r\n             console.log(err);\r\n             if(err._body&& JSON.parse(err._body).email&& JSON.parse(err._body).email ){   \r\n                  this.fpform.controls['email'].setErrors({'invalid':true});     \r\n             }\r\n                \r\n               \r\n            }   \r\n         )\r\n   };\r\n       \r\n}"]}